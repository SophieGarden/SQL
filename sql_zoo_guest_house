1
SELECT booking_date, nights
FROM booking
WHERE guest_id = 1183

2
SELECT arrival_time, first_name, last_name
FROM booking JOIN guest ON booking.guest_id = guest.id
WHERE booking_date ='2016-11-05'
ORDER BY arrival_time

3
SELECT booking_id, room_type_requested, occupants, rate.amount
FROM booking JOIN rate ON booking.room_type_requested = rate.room_type AND booking.occupants = rate.occupancy
WHERE booking_id IN ('5152', '5165', '5154', '5295')
;

4
SELECT first_name, last_name, address
FROM booking JOIN guest ON booking.guest_id = guest.id
WHERE room_no = '101' AND booking_date = '2016-12-03'
;

5
SELECT guest_id, COUNT(nights), SUM(nights)
FROM booking J
WHERE guest_id IN ('1185', '1270')
GROUP BY guest_id

6
SELECT SUM(nights * amount)
FROM booking JOIN rate ON booking.room_type_requested = rate.room_type AND booking.occupants = rate.occupancy
           JOIN guest ON booking.guest_id = guest.id
WHERE first_name = 'Ruth' AND last_name = 'Cadbury'
;

7
SELECT  booking.booking_id, rate.amount * booking.nights  + extra_sum_amount
FROM booking JOIN rate ON booking.room_type_requested = rate.room_type AND booking.occupants = rate.occupancy
           JOIN ( SELECT booking_id, SUM(amount) as extra_sum_amount
                       FROM extra
                       GROUP BY booking_id
           ) temp_extra
           ON booking.booking_id = temp_extra.booking_id
WHERE booking.booking_id = '5346'
;

8
Edinburgh Residents. For every guest who has the word “Edinburgh” in their address show the total number of nights booked. Be sure to include 0 for those guests who have never had a booking. Show last name, first name, address and number of nights. Order by last name then first name.

SELECT last_name, first_name, address, COALESCE(SUM(nights), 0)
FROM booking RIGHT JOIN guest ON booking.guest_id = guest.id
WHERE address LIKE '%Edinburgh%'
GROUP BY last_name, first_name, address
ORDER BY last_name, first_name


9

SELECT booking_date, COUNT(booking_id)
FROM booking
WHERE DATE(booking_date) BETWEEN DATE('2016-11-25') AND DATE_ADD('2016-11-25', INTERVAL 6 DAY)
GROUP BY booking_date
ORDER BY booking_date


10 How many guests? Show the number of guests in the hotel on the night of 2016-11-21. Include all occupants who checked in that day but not those who checked out.

SELECT SUM(occupants)
FROM booking
WHERE booking_date <= '2016-11-21' AND  DATE_ADD(booking_date,  INTERVAL nights DAY) > '2016-11-21'
;


11
SELECT DISTINCT g1.last_name, g1.first_name, g2.first_name
FROM (booking b1 JOIN guest g1 ON b1.guest_id = g1.id)
           JOIN
           (booking b2 JOIN guest g2 ON b2.guest_id = g2.id)

           ON b1.booking_date <= b2.booking_date
                 AND DATE_ADD(b1.booking_date, INTERVAL b1.nights DAY) > b2.booking_date
                 AND b1.booking_id != b2.booking_id

                 AND g1.last_name = g2.last_name
                 AND g1.first_name > g2.first_name
ORDER BY last_name

/*not sure why g1.first_name < g2.first_name does NOT work, bug? */

12

SELECT temp1.booking_date, 1st, 2nd, 3rd
FROM
(
SELECT b1.booking_date, COUNT(*) as 1st
FROM booking b1
WHERE SUBSTRING(b1.room_no FROM 1 FOR 1) = 1
               AND booking_date BETWEEN DATE('2016-11-14') AND DATE_ADD('2016-11-14',  INTERVAL 6 DAY)
GROUP BY b1.booking_date
) temp1

JOIN
(
SELECT b2.booking_date, COUNT(*) as 2nd
FROM booking b2
WHERE SUBSTRING(b2.room_no FROM 1 FOR 1) = 2
               AND booking_date BETWEEN DATE('2016-11-14') AND DATE_ADD('2016-11-14',  INTERVAL 6 DAY)
GROUP BY b2.booking_date
) temp2
USING(booking_Date)

JOIN
(
SELECT b3.booking_date, COUNT(*) as 3rd
FROM booking b3
WHERE SUBSTRING(b3.room_no FROM 1 FOR 1) = 3
               AND booking_date BETWEEN DATE('2016-11-14') AND DATE_ADD('2016-11-14',  INTERVAL 6 DAY)
GROUP BY b3.booking_date
) temp3
USING(booking_Date)

;
13
SELECT room.id
FROM room
WHERE room.id NOT IN
             (SELECT room_no
              FROM booking
              WHERE booking_date <= DATE('2016-11-25')
                            AND DATE_ADD(booking_date, INTERVAL nights DAY) > DATE('2016-11-25')
              )
;


#########################
web paste

Guest House Assessment Easy
Database Description | Easy Problems | Medium Problems | Hard Problems

1.
Guest 1183. Give the booking_date and the number of nights for guest 1183.


SELECT booking_date, nights
FROM booking
WHERE guest_id = 1183
Submit SQLRestore default
+--------------+--------+
| booking_date | nights |
+--------------+--------+
| 2016-11-27   |      5 |
+--------------+--------+
result
2.
When do they get here? List the arrival time and the first and last names for all guests due to arrive on 2016-11-05, order the output by time of arrival.


SELECT arrival_time, first_name, last_name
FROM booking JOIN guest ON booking.guest_id = guest.id
WHERE booking_date ='2016-11-05'
ORDER BY arrival_time
Submit SQLRestore default
+--------------+------------+-----------+
| arrival_time | first_name | last_name |
+--------------+------------+-----------+
| 14:00        | Lisa       | Nandy     |
| 15:00        | Jack       | Dromey    |
| 16:00        | Mr Andrew  | Tyrie     |
| 21:00        | James      | Heappey   |
| 22:00        | Justin     | Tomlinson |
+--------------+------------+-----------+
result
3.
Look up daily rates. Give the daily rate that should be paid for bookings with ids 5152, 5165, 5154 and 5295. Include booking id, room type, number of occupants and the amount.


SELECT booking_id, room_type_requested, occupants, rate.amount
FROM booking JOIN rate ON booking.room_type_requested = rate.room_type AND booking.occupants = rate.occupancy

WHERE booking_id IN ('5152', '5165', '5154', '5295')
;
Submit SQLRestore default
+------------+---------------------+-----------+--------+
| booking_id | room_type_requested | occupants | amount |
+------------+---------------------+-----------+--------+
|       5152 | double              |         2 |  72.00 |
|       5154 | double              |         1 |  56.00 |
|       5295 | family              |         3 |  84.00 |
+------------+---------------------+-----------+--------+
result
4.
Who’s in 101? Find who is staying in room 101 on 2016-12-03, include first name, last name and address.


SELECT first_name, last_name, address
FROM booking JOIN guest ON booking.guest_id = guest.id
WHERE room_no = '101' AND booking_date = '2016-12-03'
;
Submit SQLRestore default
+------------+-----------+-------------+
| first_name | last_name | address     |
+------------+-----------+-------------+
| Graham     | Evans     | Weaver Vale |
+------------+-----------+-------------+
result
5.
How many bookings, how many nights? For guests 1185 and 1270 show the number of bookings made and the total number of nights. Your output should include the guest id and the total number of bookings and the total number of nights.


SELECT guest_id, COUNT(nights), SUM(nights)
FROM booking J
WHERE guest_id IN ('1185', '1270')
GROUP BY guest_id

Submit SQLRestore default
+----------+---------------+-------------+
| guest_id | COUNT(nights) | SUM(nights) |
+----------+---------------+-------------+
|     1185 |             3 |           8 |
|     1270 |             2 |           3 |
+----------+---------------+-------------+
result




Guest House Assessment Medium
Database Description | Easy Problems | Medium Problems | Hard Problems
6.
Ruth Cadbury. Show the total amount payable by guest Ruth Cadbury for her room bookings. You should JOIN to the rate table using room_type_requested and occupants.


SELECT SUM(nights * amount)
FROM booking JOIN rate ON booking.room_type_requested = rate.room_type AND booking.occupants = rate.occupancy
           JOIN guest ON booking.guest_id = guest.id
WHERE first_name = 'Ruth' AND last_name = 'Cadbury'
;
Submit SQLRestore default
+--------------------+
| SUM(nights*amount) |
+--------------------+
|             552.00 |
+--------------------+
Result:
SUM(nights * ..
552.00
7.
Including Extras. Calculate the total bill for booking 5346 including extras.


SELECT  booking.booking_id, rate.amount * booking.nights  + extra_sum_amount
FROM booking JOIN rate ON booking.room_type_requested = rate.room_type AND booking.occupants = rate.occupancy
           JOIN ( SELECT booking_id, SUM(amount) as extra_sum_amount
                       FROM extra
                       GROUP BY booking_id
           ) temp_extra
           ON booking.booking_id = temp_extra.booking_id
WHERE booking.booking_id = '5346'
;
Submit SQLRestore default
+-------------+
| SUM(amount) |
+-------------+
|      118.56 |
+-------------+
Result:
booking_id	rate.amount *..
5346	118.56
8.
Edinburgh Residents. For every guest who has the word “Edinburgh” in their address show the total number of nights booked. Be sure to include 0 for those guests who have never had a booking. Show last name, first name, address and number of nights. Order by last name then first name.


SELECT last_name, first_name, address, COALESCE(SUM(nights), 0)
FROM booking RIGHT JOIN guest ON booking.guest_id = guest.id
WHERE address LIKE '%Edinburgh%'
GROUP BY last_name, first_name, address
ORDER BY last_name, first_name


Submit SQLRestore default
+-----------+------------+---------------------------+--------+
| last_name | first_name | address                   | nights |
+-----------+------------+---------------------------+--------+
| Brock     | Deidre     | Edinburgh North and Leith |      0 |
| Cherry    | Joanna     | Edinburgh South West      |      0 |
| Murray    | Ian        | Edinburgh South           |     13 |
| Sheppard  | Tommy      | Edinburgh East            |      0 |
| Thomson   | Michelle   | Edinburgh West            |      3 |
+-----------+------------+---------------------------+--------+
Result:
last_name	first_name	address	COALESCE(SUM(..
Brock	Deidre	Edinburgh North and Leith	0
Cherry	Joanna	Edinburgh South West	0
Murray	Ian	Edinburgh South	13
Sheppard	Tommy	Edinburgh East	0
Thomson	Michelle	Edinburgh West	3
9.
How busy are we? For each day of the week beginning 2016-11-25 show the number of bookings starting that day. Be sure to show all the days of the week in the correct order.


SELECT booking_date, COUNT(booking_id)
FROM booking
WHERE DATE(booking_date) BETWEEN DATE('2016-11-25') AND DATE_ADD('2016-11-25', INTERVAL 6 DAY)
GROUP BY booking_date
ORDER BY booking_date
Submit SQLRestore default
+------------+----------+
| i          | arrivals |
+------------+----------+
| 2016-11-25 |        7 |
| 2016-11-26 |        8 |
| 2016-11-27 |       12 |
| 2016-11-28 |        7 |
| 2016-11-29 |       13 |
| 2016-11-30 |        6 |
| 2016-12-01 |        7 |
+------------+----------+
Result:
booking_date	COUNT(booking..
2016-11-25	7
2016-11-26	8
2016-11-27	12
2016-11-28	7
2016-11-29	13
2016-11-30	6
2016-12-01	7
10.
How many guests? Show the number of guests in the hotel on the night of 2016-11-21. Include all occupants who checked in that day but not those who checked out.


SELECT SUM(occupants)
FROM booking
WHERE booking_date <= '2016-11-21' AND  DATE_ADD(booking_date,  INTERVAL nights DAY) > '2016-11-21'
;
Submit SQLRestore default
+----------------+
| SUM(occupants) |
+----------------+
|             39 |
+----------------+
Result:
SUM(occupants)
39


11.
Coincidence. Have two guests with the same surname ever stayed in the hotel on the evening? Show the last name and both first names. Do not include duplicates.


SELECT DISTINCT g1.last_name, g1.first_name, g2.first_name
FROM (booking b1 JOIN guest g1 ON b1.guest_id = g1.id)
           JOIN
           (booking b2 JOIN guest g2 ON b2.guest_id = g2.id)

           ON b1.booking_date <= b2.booking_date
                 AND DATE_ADD(b1.booking_date, INTERVAL b1.nights DAY) > b2.booking_date
                 AND b1.booking_id != b2.booking_id

                 AND g1.last_name = g2.last_name
                 AND g1.first_name > g2.first_name
ORDER BY last_name

/*not sure why g1.first_name < g2.first_name does NOT work, bug? */
Submit SQLRestore default
+-----------+------------+-------------+
| last_name | first_name | first_name  |
+-----------+------------+-------------+
| Davies    | Philip     | David T. C. |
| Evans     | Graham     | Mr Nigel    |
| Howarth   | Mr George  | Sir Gerald  |
| Jones     | Susan Elan | Mr Marcus   |
| Lewis     | Clive      | Dr Julian   |
| McDonnell | John       | Dr Alasdair |
+-----------+------------+-------------+
Result:
last_name	first_name	first_name
Davies	Philip	David T. C.
Evans	Mr Nigel	Graham
Howarth	Sir Gerald	Mr George
Jones	Susan Elan	Mr Marcus
Lewis	Dr Julian	Clive
McDonnell	John	Dr Alasdair

12.
Check out per floor. The first digit of the room number indicates the floor – e.g. room 201 is on the 2nd floor. For each day of the week beginning 2016-11-14 show how many rooms are being vacated that day by floor number. Show all days in the correct order.


SELECT temp1.booking_date, 1st, 2nd, 3rd
FROM
(
SELECT b1.booking_date, COUNT(*) as 1st
FROM booking b1
WHERE SUBSTRING(b1.room_no FROM 1 FOR 1) = 1
               AND booking_date BETWEEN DATE('2016-11-14') AND DATE_ADD('2016-11-14',  INTERVAL 6 DAY)
GROUP BY b1.booking_date
) temp1

JOIN
(
SELECT b2.booking_date, COUNT(*) as 2nd
FROM booking b2
WHERE SUBSTRING(b2.room_no FROM 1 FOR 1) = 2
               AND booking_date BETWEEN DATE('2016-11-14') AND DATE_ADD('2016-11-14',  INTERVAL 6 DAY)
GROUP BY b2.booking_date
) temp2
USING(booking_Date)

JOIN
(
SELECT b3.booking_date, COUNT(*) as 3rd
FROM booking b3
WHERE SUBSTRING(b3.room_no FROM 1 FOR 1) = 3
               AND booking_date BETWEEN DATE('2016-11-14') AND DATE_ADD('2016-11-14',  INTERVAL 6 DAY)
GROUP BY b3.booking_date
) temp3
USING(booking_Date)

;
Submit SQLRestore default
+------------+-----+-----+-----+
| i          | 1st | 2nd | 3rd |
+------------+-----+-----+-----+
| 2016-11-14 |   5 |   3 |   4 |
| 2016-11-15 |   6 |   4 |   1 |
| 2016-11-16 |   2 |   2 |   4 |
| 2016-11-17 |   5 |   3 |   6 |
| 2016-11-18 |   2 |   3 |   2 |
| 2016-11-19 |   5 |   5 |   1 |
| 2016-11-20 |   2 |   2 |   2 |
+------------+-----+-----+-----+
Result:
booking_date	1st	2nd	3rd
2016-11-14	5	3	4
2016-11-15	6	4	1
2016-11-16	2	2	4
2016-11-17	5	2	6
2016-11-18	2	3	2

13.
Free rooms? List the rooms that are free on the day 25th Nov 2016.


SELECT room.id
FROM room
WHERE room.id NOT IN
             (SELECT room_no
              FROM booking
              WHERE booking_date <= DATE('2016-11-25')
                            AND DATE_ADD(booking_date, INTERVAL nights DAY) > DATE('2016-11-25')
              )
;

Submit SQLRestore default
+-----+
| id  |
+-----+
| 207 |
| 210 |
| 304 |
+-----+
Result:
id
207
210
304
14.
Single room for three nights required. A customer wants a single room for three consecutive nights. Find the first available date in December 2016.


SELECT room_no, prev_checkout_date
FROM (
SELECT *,(booking_date + INTERVAL nights DAY) as checkout_date, @rownum:=@rownum + 1 as rank1
FROM booking, (SELECT @rownum:= 0) as r
ORDER BY room_no, booking_date
)  main
JOIN (
  SELECT (booking_date + INTERVAL nights DAY) as prev_checkout_date, @rownum2 := @rownum2 + 1 as rank2
  FROM booking, (SELECT @rownum2:=1) as rank2
  ORDER BY room_no, booking_date
) prev
ON main.rank1 = prev.rank2
WHERE  (TO_DAYS(booking_date) - TO_DAYS(prev_checkout_date)) >= 7;
Submit SQLRestore default
+-----+------------+
| id  | MIN(i)     |
+-----+------------+
| 201 | 2016-12-11 |
+-----+------------+
